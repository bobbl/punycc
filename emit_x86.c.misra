[emit_x86.c:447] (style) There should be no unused parameters in functions (Advisory) [misra-c2012-2.7]
[emit_x86.c:479] (style) There should be no unused parameters in functions (Advisory) [misra-c2012-2.7]
[emit_x86.c:1] (style) The character sequences /* and // shall not be used within a comment (Required) [misra-c2012-3.1]
[emit_x86.c:315] (style) Octal and hexadecimal escape sequences shall be terminated (Required) [misra-c2012-4.1]
[emit_x86.c:580] (style) Octal and hexadecimal escape sequences shall be terminated (Required) [misra-c2012-4.1]
[emit_x86.c:276] (style) A “u” or “U” suﬃx shall be applied to all integer constants that are represented in an unsigned type (Required) [misra-c2012-7.2]
[emit_x86.c:383] (style) A “u” or “U” suﬃx shall be applied to all integer constants that are represented in an unsigned type (Required) [misra-c2012-7.2]
[emit_x86.c:399] (style) A “u” or “U” suﬃx shall be applied to all integer constants that are represented in an unsigned type (Required) [misra-c2012-7.2]
[emit_x86.c:304] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:315] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:339] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:340] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:381] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:395] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:499] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:532] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:580] (style) A string literal shall not be assigned to an object unless the object’s type is “pointer to const-qualified char” (Required) [misra-c2012-7.4]
[emit_x86.c:12] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:16] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:17] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:18] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:19] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:20] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:22] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:23] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:24] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:25] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:26] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:27] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:30] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:38] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:45] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:50] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:50] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:52] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:53] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:61] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:75] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:77] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:97] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:111] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:121] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:122] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:123] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:124] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:125] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:127] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:176] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:176] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:182] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:182] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:182] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:201] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:201] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:201] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:221] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:221] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:240] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:240] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:251] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:378] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:386] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:391] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:391] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:406] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:411] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:416] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:416] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:416] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:428] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:428] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:428] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:430] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:442] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:447] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:479] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:479] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:479] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:479] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:487] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:487] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:487] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:492] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:492] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:494] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:511] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:547] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:547] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:564] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:570] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:577] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:623] (style) Types shall be explicitly specified (Required) [misra-c2012-8.1]
[emit_x86.c:69] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:232] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:343] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:386] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:442] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:511] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:518] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:557] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:564] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:577] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:623] (style) Function types shall be in prototype form with named parameters (Required) [misra-c2012-8.2]
[emit_x86.c:30] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:38] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:45] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:50] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:61] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:69] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:75] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:97] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:111] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:121] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:176] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:182] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:201] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:221] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:232] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:240] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:251] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:343] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:378] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:386] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:391] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:406] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:411] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:416] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:428] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:442] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:447] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:479] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:487] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:492] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:511] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:518] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:547] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:557] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:564] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:570] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:577] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:623] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:12] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:15] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:16] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:17] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:18] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:19] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:20] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:22] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:23] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:24] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:25] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:26] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:27] (style) A compatible declaration shall be visible when an object or function with external linkage is defined (Required) [misra-c2012-8.4]
[emit_x86.c:41] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:56] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:72] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:79] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:80] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:83] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:87] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:114] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:115] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:133] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:140] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:142] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:145] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:146] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:149] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:150] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:150] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:150] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:162] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:165] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:166] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:171] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:234] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:253] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:256] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:257] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:258] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:263] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:264] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:279] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:284] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:285] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:286] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:288] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:292] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:293] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:297] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:305] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:311] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:312] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:325] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:327] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:335] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:345] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:348] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:349] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:357] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:358] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:365] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:366] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:381] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:395] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:403] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:408] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:418] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:418] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:419] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:430] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:431] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:434] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:439] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:450] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:451] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:456] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:457] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:463] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:469] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:470] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:476] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:482] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:484] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:489] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:496] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:497] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:498] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:500] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:508] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:514] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:523] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:524] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:533] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:566] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:574] (style) Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category (Required) [misra-c2012-10.4]
[emit_x86.c:304] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:339] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:340] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:381] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:395] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:499] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:580] (style) A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (Required) [misra-c2012-11.8]
[emit_x86.c:100] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:130] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:139] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:195] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:203] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:393] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:501] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:538] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:559] (style) The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type (Required) [misra-c2012-14.4]
[emit_x86.c:79] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:135] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:143] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:147] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:153] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:168] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:280] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:290] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:295] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:299] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:307] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:327] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:353] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:361] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:370] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:504] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:542] (style) A function should have a single point of exit at the end (Advisory) [misra-c2012-15.5]
[emit_x86.c:79] (style) The body of an iteration-statement or a selection-statement shall be a compound-statement (Required) [misra-c2012-15.6]
[emit_x86.c:132] (style) The body of an iteration-statement or a selection-statement shall be a compound-statement (Required) [misra-c2012-15.6]
[emit_x86.c:279] (style) The body of an iteration-statement or a selection-statement shall be a compound-statement (Required) [misra-c2012-15.6]
[emit_x86.c:305] (style) The body of an iteration-statement or a selection-statement shall be a compound-statement (Required) [misra-c2012-15.6]
[emit_x86.c:327] (style) The body of an iteration-statement or a selection-statement shall be a compound-statement (Required) [misra-c2012-15.6]
[emit_x86.c:335] (style) The body of an iteration-statement or a selection-statement shall be a compound-statement (Required) [misra-c2012-15.6]
[emit_x86.c:115] (style) The value returned by a function having non-void return type shall be used (Required) [misra-c2012-17.7]
[emit_x86.c:533] (style) The value returned by a function having non-void return type shall be used (Required) [misra-c2012-17.7]
[emit_x86.c:580] (style) The value returned by a function having non-void return type shall be used (Required) [misra-c2012-17.7]
[emit_x86.c:408] (style) The +, -, += and -= operators should not be applied to an expression of pointer type (Advisory) [misra-c2012-18.4]
[emit_x86.c:533] (style) The +, -, += and -= operators should not be applied to an expression of pointer type (Advisory) [misra-c2012-18.4]
[emit_x86.c:533] (style) The +, -, += and -= operators should not be applied to an expression of pointer type (Advisory) [misra-c2012-18.4]
[emit_x86.c:625] (style) The +, -, += and -= operators should not be applied to an expression of pointer type (Advisory) [misra-c2012-18.4]
[emit_x86.c:626] (style) The +, -, += and -= operators should not be applied to an expression of pointer type (Advisory) [misra-c2012-18.4]
